/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author UNI
 */
public class VerServicio extends javax.swing.JInternalFrame {

    /**
     * Creates new form AgregarDoctor
     */
    public VerServicio() {
        initComponents();
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("SERVICIOS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jButton2.setText("MODIFICAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("SALIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel1.setText("BUSCAR");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("ACTIVAR/DESACTIVAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar)
                        .addGap(77, 77, 77)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(154, 154, 154))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 705, 366);
    }// </editor-fold>//GEN-END:initComponents

    public void Modificar() {

        int Fila = jTable1.getSelectedRow();

        //   System.out.println("Fila "+Fila);
        if (Fila >= 0) {

            int ID = Integer.parseInt(model.getValueAt(Fila, 0).toString());

            ModificarServicio MS = new ModificarServicio(null, true);
            MS.CargarDatos(ID);
            MS.setVS(this);
            MS.setVisible(true);

//        this.toBack();
//        ME.toFront();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar el registro a modificar",
                    "Seleccione", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Modificar(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    

    public void CargarDatos() {
        model.setRowCount(0);

        String[] Header = {"No.", "Nombre", "Descripcion", "Precio", "Estado"};
        model.setColumnIdentifiers(Header);

        String[] Datos = new String[5];

        try {
            Conexion c= new Conexion();
            Connection cn=c.conectar();
            String sql="";
            sql="Select * from Servicios";
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            
           

            while (rs.next()) {
                
                Datos[0] = String.valueOf(rs.getInt("COD_SERV"));
                Datos[1] = rs.getString("NOM_SERV");
                Datos[2] = rs.getString("DETALLE");
                Datos[3] = String.valueOf(rs.getFloat("PRECIO"));
//                
                int Estado = rs.getInt("ESTADO");
                String Estate = "Inactivo";
                if (Estado==1) {
                    Estate = "Activo";
                }
                Datos[4] = Estate;

                model.addRow(Datos);
            }

        } catch (SQLException ex) {

        }

        jTable1.setModel(model);
    }

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

        CargarDatos();

// TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    public void ActDes() {

        int Fila = jTable1.getSelectedRow();
        int Col = 4;

     //   System.out.println("Fila "+Fila);
        if (Fila >= 0) {

            int ID = Integer.parseInt(model.getValueAt(Fila, 0).toString());
            String Estado = model.getValueAt(Fila, Col).toString();

            if (Estado.equalsIgnoreCase("Activo")) {
                Conexion c= new Conexion();
            Connection cn=c.conectar();
            String sql="";
            sql="update  Servicios set ESTADO =0 WHERE COD_SERV ="+ID;
                try {
                    PreparedStatement psd = cn.prepareStatement(sql); 
                    int n=psd.executeUpdate();
                    if (n>0) {
                        JOptionPane.showMessageDialog(this, "Ahora esta desactivado");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(VerServicio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (Estado.equalsIgnoreCase("Inactivo")) {
               Conexion c= new Conexion();
            Connection cn=c.conectar();
            String sql="";
            sql="update  Servicios set ESTADO=1 WHERE COD_SERV ="+ID;
                try {
                    PreparedStatement psd = cn.prepareStatement(sql); 
                    int n=psd.executeUpdate();
                    if (n>0) {
                        JOptionPane.showMessageDialog(this, "Ahora esta activo");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(VerServicio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            CargarDatos();

        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar el registro a Activar/Desactivar",
                    "Seleccione", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ActDes();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    public void Buscar(){
         String Buscar = txtBuscar.getText();
         
           model.setRowCount(0);

        String[] Header = {"No.", "Nombre", "Descripcion", "Precio", "Estado"};
        model.setColumnIdentifiers(Header);

        String[] Datos = new String[5];

        try {
            Conexion c= new Conexion();
            Connection cn=c.conectar();
            String sql="";
            sql="Select * from Servicios where NOM_SERV like '%"+Buscar+"%'";
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);

            while (rs.next()) {
               Datos[0] = String.valueOf(rs.getInt("COD_SERV"));
                Datos[1] = rs.getString("NOM_SERV");
                Datos[2] = rs.getString("DETALLE");
                Datos[3] = String.valueOf(rs.getFloat("PRECIO"));
//                
                int Estado = rs.getInt("ESTADO");
                String Estate = "Inactivo";
                if (Estado==1) {
                    Estate = "Activo";
                }
                Datos[4] = Estate;

                model.addRow(Datos);
            }

        } catch (SQLException ex) {

        }

        jTable1.setModel(model);
         
    }
    
    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
Buscar();        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarKeyReleased

    DefaultTableModel model = new DefaultTableModel() {

        @Override
        public boolean isCellEditable(int row, int column) {

            return false;
        }

    };
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
